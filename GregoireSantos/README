Le projet est constitué des sources:

* ast.[hc]     pour la description de l'Arbre de Syntax Abstraite
* global.h     on s'autorise quelques globales pour la gestion des erreurs et pour alléger l'appel au parser
* lexer.lex    description lexicale
* main.c       maintient maintenant la main sur main
* parser.y     description syntaxique
* printer.[hc] fonctions d'affichages (rudimentaires)


Le Makefile permet bien sûr d'appeler «make» et «make clean». Des exemples de programmes (acceptés et non acceptés) sont présents dans le répertoires 'examples'. Il est possible de tous les tester en lançant le script './test'.


À moins d'un oubli de notre part, la syntaxe acceptée contient les fonctionnalités suivantes de C:

* types de base (void, char, int) et pointeurs (récursivement)
* déclaration de fonctions (type void pour l'absence d'aguments), et appels
* négation logique (!a), opposé (-a)
* tests de comparaison (==, !=, <=, <, >=, >)
* expressions arithmétiques (+, -, *, +, %)
* opérateur ternare (a ? b : c)
* boucles while, while..do et for
* structures conditionnelles (if, if..else)


Bison produit encore deux avertissements: 12 conflits de décalage/réductions qui n'ont pas encore été résolus, et un 'statement with no effect' (sur la règle "instr ','" dans les statements).
